name: Python

on: [push, pull_request, release]

jobs:
  gen_api:
    name: Generate public api
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Define spot.h
        run: make api
      - uses: actions/upload-artifact@v4
        with:
          name: api
          path: dist/spot.h
          if-no-files-found: error

  build_wheels:
    needs: gen_api
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: api
          path: dist/

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install some build dependencies
        run: python -m pip install -U pip setuptools build wheel abi3audit

      - name: Build wheel
        run: |
          python -m build --wheel --outdir dist
        working-directory: ./python

      - if: runner.os == 'Linux'
        name: Repair wheel (linux)
        run: |
          pip install -U auditwheel patchelf
          auditwheel repair -w wheel --strip dist/*.whl
        working-directory: ./python

      - if: runner.os == 'Linux'
        name: Check abi3 (Linux)
        run: abi3audit --strict --report wheel/*.whl
        working-directory: ./python

      - if: runner.os == 'Windows'
        name: Repair wheel (windows)
        run: |
          pip install -U delvewheel
          delvewheel repair -w wheel --strip dist/$((dir dist|Select-Object -First 1).Name)
        working-directory: ./python

      - if: runner.os == 'Windows'
        name: Check abi3 (Windows)
        run: abi3audit --strict --report dist/$((dir wheel|Select-Object -First 1).Name)
        working-directory: ./python

      - uses: actions/upload-artifact@v4
        with:
          path: ./python/wheel/*.whl
          name: libspot-python-${{ matrix.os }}

  upload:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    if: github.ref_name == 'master'
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: libspot-python-
          path: dist
          merge-multiple: true
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      # - uses: pypa/gh-action-pypi-publish@v1.4.2
      #   with:
      #     user: __token__
      #     password: ${{ secrets.PYPI_API_KEY }}
