<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_stream_mean" kind="class" language="C++" prot="public">
    <compoundname>StreamMean</compoundname>
    <basecompoundref refid="class_ubend" prot="public" virt="non-virtual">Ubend</basecompoundref>
    <includes refid="dspot_8h" local="no">dspot.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_stream_mean_1a2a41de2ac9ed11a18c33850251f5a2de" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double StreamMean::m</definition>
        <argsstring></argsstring>
        <name>m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the classic mean </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dspot.h" line="33" column="1" bodyfile="include/dspot.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_stream_mean_1a6c1b11948f573e33842f6ebd00fed8c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>StreamMean::StreamMean</definition>
        <argsstring>(int size=-1)</argsstring>
        <name>StreamMean</name>
        <param>
          <type>int</type>
          <declname>size</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Basic constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>The window size where the mean is computed (-1 for infinite window) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="class_stream_mean" kindref="compound">StreamMean</ref> object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dspot.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_stream_mean_1a74146344fdc04041c42b42aeb5855b06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>StreamMean::StreamMean</definition>
        <argsstring>(int size, vector&lt; double &gt; v)</argsstring>
        <name>StreamMean</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Basic constructor with a first batch of data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>The window size where the mean is computed (-1 for infinite window) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">v</parametername>
</parameternamelist>
<parameterdescription>
<para>An initial batch of data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="class_stream_mean" kindref="compound">StreamMean</ref> object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dspot.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_stream_mean_1ae29b32d0c2e0027f2665859db3ff71e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>StreamMean::StreamMean</definition>
        <argsstring>(const Ubend &amp;other)</argsstring>
        <name>StreamMean</name>
        <param>
          <type>const <ref refid="class_ubend" kindref="compound">Ubend</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Constructor from a <ref refid="class_ubend" kindref="compound">Ubend</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para>External <ref refid="class_ubend" kindref="compound">Ubend</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="class_stream_mean" kindref="compound">StreamMean</ref> object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dspot.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_stream_mean_1a3be969dbed390a7f550f3ed7518052eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double StreamMean::mean</definition>
        <argsstring>()</argsstring>
        <name>mean</name>
        <briefdescription>
<para>Return the mean within the window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dspot.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_stream_mean_1a8c4b57ffad34ec1b4b924ad66dbab9c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ubend_8h_1a7b281aeecd70ca8ebfa9874e42d1f04d" kindref="member">UBENDSTATUS</ref></type>
        <definition>UBENDSTATUS StreamMean::step</definition>
        <argsstring>(double x_n)</argsstring>
        <name>step</name>
        <param>
          <type>double</type>
          <declname>x_n</declname>
        </param>
        <briefdescription>
<para>Update the mean with a new incoming data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x_n</parametername>
</parameternamelist>
<parameterdescription>
<para>New incoming data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The state of the <ref refid="class_ubend" kindref="compound">Ubend</ref> container (see the <ref refid="class_ubend" kindref="compound">Ubend</ref> class) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dspot.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_stream_mean_1af1d9c6b3da3c6bc2fdd321b7d8dbba27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_stream_mean" kindref="compound">StreamMean</ref></type>
        <definition>StreamMean StreamMean::operator+</definition>
        <argsstring>(const StreamMean &amp;other) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_stream_mean" kindref="compound">StreamMean</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>The sum operator (merge the <ref refid="class_ubend" kindref="compound">Ubend</ref>) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para>Another <ref refid="class_stream_mean" kindref="compound">StreamMean</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="class_stream_mean" kindref="compound">StreamMean</ref> instance </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dspot.h" line="76" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Compute the mean over streaming data (window) </para>    </briefdescription>
    <detaileddescription>
<para>The harmonic mean has also been added but it is not used </para>    </detaileddescription>
    <inheritancegraph>
      <node id="28">
        <label>std::vector&lt; double &gt;</label>
      </node>
      <node id="27">
        <label>Ubend</label>
        <link refid="class_ubend"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>StreamMean</label>
        <link refid="class_stream_mean"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="31">
        <label>std::vector&lt; double &gt;</label>
      </node>
      <node id="30">
        <label>Ubend</label>
        <link refid="class_ubend"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>StreamMean</label>
        <link refid="class_stream_mean"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/dspot.h" line="30" column="1" bodyfile="include/dspot.h" bodystart="30" bodyend="77"/>
    <listofallmembers>
      <member refid="class_ubend_1a8d436357fdc7f423da17b06cf4f6e9a2" prot="protected" virt="non-virtual"><scope>StreamMean</scope><name>capacity</name></member>
      <member refid="class_ubend_1a82b8a2847f23eafca91a44747af8918c" prot="protected" virt="non-virtual"><scope>StreamMean</scope><name>cursor</name></member>
      <member refid="class_ubend_1af481e49255fa61cee741420321891deb" prot="public" virt="non-virtual"><scope>StreamMean</scope><name>getCapacity</name></member>
      <member refid="class_ubend_1ae821aee3b90148e3dc8b77970a697947" prot="public" virt="non-virtual"><scope>StreamMean</scope><name>getCursor</name></member>
      <member refid="class_ubend_1ad7b783a532d3123794e4010be9ee8442" prot="public" virt="non-virtual"><scope>StreamMean</scope><name>getLastErasedData</name></member>
      <member refid="class_ubend_1adae407b77285bfeefb0d3b0d2de7b854" prot="public" virt="non-virtual"><scope>StreamMean</scope><name>isFilled</name></member>
      <member refid="class_ubend_1afb79ffb4bb8a4c0036ef99a2d38c171f" prot="protected" virt="non-virtual"><scope>StreamMean</scope><name>last_erased_data</name></member>
      <member refid="class_stream_mean_1a2a41de2ac9ed11a18c33850251f5a2de" prot="protected" virt="non-virtual"><scope>StreamMean</scope><name>m</name></member>
      <member refid="class_stream_mean_1a3be969dbed390a7f550f3ed7518052eb" prot="public" virt="non-virtual"><scope>StreamMean</scope><name>mean</name></member>
      <member refid="class_ubend_1a3ce0b5a4f7f60a6273594c370803bd84" prot="public" virt="non-virtual"><scope>StreamMean</scope><name>merge</name></member>
      <member refid="class_stream_mean_1af1d9c6b3da3c6bc2fdd321b7d8dbba27" prot="public" virt="non-virtual"><scope>StreamMean</scope><name>operator+</name></member>
      <member refid="class_ubend_1a14d9844228e9a33fd3565b280e946f28" prot="public" virt="non-virtual"><scope>StreamMean</scope><name>push</name></member>
      <member refid="class_stream_mean_1a8c4b57ffad34ec1b4b924ad66dbab9c5" prot="public" virt="non-virtual"><scope>StreamMean</scope><name>step</name></member>
      <member refid="class_stream_mean_1a6c1b11948f573e33842f6ebd00fed8c5" prot="public" virt="non-virtual"><scope>StreamMean</scope><name>StreamMean</name></member>
      <member refid="class_stream_mean_1a74146344fdc04041c42b42aeb5855b06" prot="public" virt="non-virtual"><scope>StreamMean</scope><name>StreamMean</name></member>
      <member refid="class_stream_mean_1ae29b32d0c2e0027f2665859db3ff71e6" prot="public" virt="non-virtual"><scope>StreamMean</scope><name>StreamMean</name></member>
      <member refid="class_ubend_1a5d5883f26399bb7cf357551fb247827e" prot="public" virt="non-virtual"><scope>StreamMean</scope><name>Ubend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
