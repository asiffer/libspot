<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="interface_8h" kind="file" language="C++">
    <compoundname>interface.h</compoundname>
    <includes refid="dspot_8h" local="yes">dspot.h</includes>
    <incdepgraph>
      <node id="57">
        <label>iomanip</label>
      </node>
      <node id="53">
        <label>functional</label>
      </node>
      <node id="48">
        <label>ubend.h</label>
        <link refid="ubend_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>dspot.h</label>
        <link refid="dspot_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>cmath</label>
      </node>
      <node id="55">
        <label>numeric</label>
      </node>
      <node id="58">
        <label>string</label>
      </node>
      <node id="52">
        <label>brent.h</label>
        <link refid="brent_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>bounds.h</label>
        <link refid="bounds_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>/home/asr/Documents/Work/github/libspot/master/include/interface.h</label>
        <link refid="interface_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>vector</label>
      </node>
      <node id="59">
        <label>sstream</label>
      </node>
      <node id="50">
        <label>iostream</label>
      </node>
      <node id="46">
        <label>spot.h</label>
        <link refid="spot_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>gpdfit.h</label>
        <link refid="gpdfit_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>algorithm</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="interface_8h_1aa2088f87fcfbd4de29aa4c02a099234e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_spot" kindref="compound">Spot</ref> *</type>
        <definition>Spot* Spot_new</definition>
        <argsstring>(double q, int n_init, double level, bool up, bool down, bool alert, bool bounded, int max_excess)</argsstring>
        <name>Spot_new</name>
        <param>
          <type>double</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_init</declname>
        </param>
        <param>
          <type>double</type>
          <declname>level</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>down</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alert</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bounded</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_excess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1acd4ff4515c370a7541b3a3138e2d7c0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Spot_step</definition>
        <argsstring>(Spot *s, double x)</argsstring>
        <name>Spot_step</name>
        <param>
          <type><ref refid="class_spot" kindref="compound">Spot</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1aa70498b49f18b9a449234d099d3b00e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_spot_status" kindref="compound">SpotStatus</ref></type>
        <definition>SpotStatus Spot_status</definition>
        <argsstring>(Spot *s)</argsstring>
        <name>Spot_status</name>
        <param>
          <type><ref refid="class_spot" kindref="compound">Spot</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1acb8a5ec1db361c2201ba431d97ce54f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_spot_config" kindref="compound">SpotConfig</ref></type>
        <definition>SpotConfig Spot_config</definition>
        <argsstring>(Spot *s)</argsstring>
        <name>Spot_config</name>
        <param>
          <type><ref refid="class_spot" kindref="compound">Spot</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a0712c26eaa168876989d395f62f70f13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Spot_getUpperThreshold</definition>
        <argsstring>(Spot *s)</argsstring>
        <name>Spot_getUpperThreshold</name>
        <param>
          <type><ref refid="class_spot" kindref="compound">Spot</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a9bd345a26add119d7f9c03828c6d2b33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Spot_getLowerThreshold</definition>
        <argsstring>(Spot *s)</argsstring>
        <name>Spot_getLowerThreshold</name>
        <param>
          <type><ref refid="class_spot" kindref="compound">Spot</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a1ddb75b76ba97f9070ce26622661f1fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Spot_getUpper_t</definition>
        <argsstring>(Spot *s)</argsstring>
        <name>Spot_getUpper_t</name>
        <param>
          <type><ref refid="class_spot" kindref="compound">Spot</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a6aa7629f937672776ae82380cd066598" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Spot_getLower_t</definition>
        <argsstring>(Spot *s)</argsstring>
        <name>Spot_getLower_t</name>
        <param>
          <type><ref refid="class_spot" kindref="compound">Spot</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a6ac3f4014998a1ee06d353ed17f2d794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Spot_set_q</definition>
        <argsstring>(Spot *s, double q_new)</argsstring>
        <name>Spot_set_q</name>
        <param>
          <type><ref refid="class_spot" kindref="compound">Spot</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>q_new</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a5edd0057e25cad8108fbba5c9225693e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Spot_up_probability</definition>
        <argsstring>(Spot *s, double z)</argsstring>
        <name>Spot_up_probability</name>
        <param>
          <type><ref refid="class_spot" kindref="compound">Spot</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1aa124d82179412dd3f75974d7f22ff066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Spot_down_probability</definition>
        <argsstring>(Spot *s, double z)</argsstring>
        <name>Spot_down_probability</name>
        <param>
          <type><ref refid="class_spot" kindref="compound">Spot</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a0c589bde0f12563874b0b6ea24fc7a18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_d_spot" kindref="compound">DSpot</ref> *</type>
        <definition>DSpot* DSpot_new</definition>
        <argsstring>(int d, double q, int n_init, double level, bool up, bool down, bool alert, bool bounded, int max_excess)</argsstring>
        <name>DSpot_new</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>double</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_init</declname>
        </param>
        <param>
          <type>double</type>
          <declname>level</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>down</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alert</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bounded</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_excess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a7355397a51f21cac4ad697c27e873e99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_d_spot_status" kindref="compound">DSpotStatus</ref></type>
        <definition>DSpotStatus DSpot_status</definition>
        <argsstring>(DSpot *ds)</argsstring>
        <name>DSpot_status</name>
        <param>
          <type><ref refid="class_d_spot" kindref="compound">DSpot</ref> *</type>
          <declname>ds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1ab465635f37b5babafc430c8041088e28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_d_spot_config" kindref="compound">DSpotConfig</ref></type>
        <definition>DSpotConfig DSpot_config</definition>
        <argsstring>(DSpot *ds)</argsstring>
        <name>DSpot_config</name>
        <param>
          <type><ref refid="class_d_spot" kindref="compound">DSpot</ref> *</type>
          <declname>ds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a5553a464008977434f92fc99618c180a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DSpot_step</definition>
        <argsstring>(DSpot *ds, double x)</argsstring>
        <name>DSpot_step</name>
        <param>
          <type><ref refid="class_d_spot" kindref="compound">DSpot</ref> *</type>
          <declname>ds</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1ab2572992e809c911d3030e308dc50c00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DSpot_getUpperThreshold</definition>
        <argsstring>(DSpot *ds)</argsstring>
        <name>DSpot_getUpperThreshold</name>
        <param>
          <type><ref refid="class_d_spot" kindref="compound">DSpot</ref> *</type>
          <declname>ds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1ac4de4a3d7a1b7cee0cc1963ccc4287fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DSpot_getLowerThreshold</definition>
        <argsstring>(DSpot *ds)</argsstring>
        <name>DSpot_getLowerThreshold</name>
        <param>
          <type><ref refid="class_d_spot" kindref="compound">DSpot</ref> *</type>
          <declname>ds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1aca4fc79660e757e09bc6715291588ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DSpot_getUpper_t</definition>
        <argsstring>(DSpot *ds)</argsstring>
        <name>DSpot_getUpper_t</name>
        <param>
          <type><ref refid="class_d_spot" kindref="compound">DSpot</ref> *</type>
          <declname>ds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a081cb284e461f2b0dffd501d73f74103" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DSpot_getLower_t</definition>
        <argsstring>(DSpot *ds)</argsstring>
        <name>DSpot_getLower_t</name>
        <param>
          <type><ref refid="class_d_spot" kindref="compound">DSpot</ref> *</type>
          <declname>ds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a8bf4711428c2bd84ae76410afa6d1d2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DSpot_getDrift</definition>
        <argsstring>(DSpot *ds)</argsstring>
        <name>DSpot_getDrift</name>
        <param>
          <type><ref refid="class_d_spot" kindref="compound">DSpot</ref> *</type>
          <declname>ds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a5a84ca258e807990ce48c044d0eee811" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DSpot_set_q</definition>
        <argsstring>(DSpot *ds, double q_new)</argsstring>
        <name>DSpot_set_q</name>
        <param>
          <type><ref refid="class_d_spot" kindref="compound">DSpot</ref> *</type>
          <declname>ds</declname>
        </param>
        <param>
          <type>double</type>
          <declname>q_new</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a7af61ce428c9f656e0d410b2839bd4b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DSpot_up_probability</definition>
        <argsstring>(DSpot *ds, double z)</argsstring>
        <name>DSpot_up_probability</name>
        <param>
          <type><ref refid="class_d_spot" kindref="compound">DSpot</ref> *</type>
          <declname>ds</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a2abe99f9ac268368b5d6d03729deb9f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DSpot_down_probability</definition>
        <argsstring>(DSpot *ds, double z)</argsstring>
        <name>DSpot_down_probability</name>
        <param>
          <type><ref refid="class_d_spot" kindref="compound">DSpot</ref> *</type>
          <declname>ds</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h" line="79" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>C interface header (for python notably) </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Alban Siffer </para></simplesect>
<simplesect kind="date"><para>03 March 2018 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dspot_8h" kindref="compound">dspot.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><ref refid="class_spot" kindref="compound">Spot</ref>*<sp/>Spot_new(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_init,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>level,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>up,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>down,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alert,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bounded,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_excess);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Spot_step(<ref refid="class_spot" kindref="compound">Spot</ref>*<sp/>s,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="class_spot_status" kindref="compound">SpotStatus</ref><sp/>Spot_status(<ref refid="class_spot" kindref="compound">Spot</ref>*<sp/>s);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="class_spot_config" kindref="compound">SpotConfig</ref><sp/>Spot_config(<ref refid="class_spot" kindref="compound">Spot</ref>*<sp/>s);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Spot_getUpperThreshold(<ref refid="class_spot" kindref="compound">Spot</ref>*<sp/>s);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Spot_getLowerThreshold(<ref refid="class_spot" kindref="compound">Spot</ref>*<sp/>s);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Spot_getUpper_t(<ref refid="class_spot" kindref="compound">Spot</ref>*<sp/>s);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Spot_getLower_t(<ref refid="class_spot" kindref="compound">Spot</ref>*<sp/>s);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Spot_set_q(<ref refid="class_spot" kindref="compound">Spot</ref>*<sp/>s,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q_new);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Spot_up_probability(<ref refid="class_spot" kindref="compound">Spot</ref>*<sp/>s,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Spot_down_probability(<ref refid="class_spot" kindref="compound">Spot</ref>*<sp/>s,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DSPOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="class_d_spot" kindref="compound">DSpot</ref>*<sp/>DSpot_new(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_init,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>level,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>up,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>down,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alert,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bounded,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_excess);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="class_d_spot_status" kindref="compound">DSpotStatus</ref><sp/>DSpot_status(<ref refid="class_d_spot" kindref="compound">DSpot</ref>*<sp/>ds);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="class_d_spot_config" kindref="compound">DSpotConfig</ref><sp/>DSpot_config(<ref refid="class_d_spot" kindref="compound">DSpot</ref>*<sp/>ds);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DSpot_step(<ref refid="class_d_spot" kindref="compound">DSpot</ref>*<sp/>ds,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>DSpot_getUpperThreshold(<ref refid="class_d_spot" kindref="compound">DSpot</ref>*<sp/>ds);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>DSpot_getLowerThreshold(<ref refid="class_d_spot" kindref="compound">DSpot</ref>*<sp/>ds);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>DSpot_getUpper_t(<ref refid="class_d_spot" kindref="compound">DSpot</ref>*<sp/>ds);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>DSpot_getLower_t(<ref refid="class_d_spot" kindref="compound">DSpot</ref>*<sp/>ds);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>DSpot_getDrift(<ref refid="class_d_spot" kindref="compound">DSpot</ref>*<sp/>ds);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DSpot_set_q(<ref refid="class_d_spot" kindref="compound">DSpot</ref>*<sp/>ds,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q_new);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>DSpot_up_probability(<ref refid="class_d_spot" kindref="compound">DSpot</ref>*<sp/>ds,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>DSpot_down_probability(<ref refid="class_d_spot" kindref="compound">DSpot</ref>*<sp/>ds,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/asr/Documents/Work/github/libspot/master/include/interface.h"/>
  </compounddef>
</doxygen>
